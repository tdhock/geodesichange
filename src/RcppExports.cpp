// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// geodesicFPOP_interface
void geodesicFPOP_interface(const std::string in_file_str, const std::string penalty_str, const std::string temp_file_str, const std::string container_str);
RcppExport SEXP _geodesichange_geodesicFPOP_interface(SEXP in_file_strSEXP, SEXP penalty_strSEXP, SEXP temp_file_strSEXP, SEXP container_strSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string >::type in_file_str(in_file_strSEXP);
    Rcpp::traits::input_parameter< const std::string >::type penalty_str(penalty_strSEXP);
    Rcpp::traits::input_parameter< const std::string >::type temp_file_str(temp_file_strSEXP);
    Rcpp::traits::input_parameter< const std::string >::type container_str(container_strSEXP);
    geodesicFPOP_interface(in_file_str, penalty_str, temp_file_str, container_str);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_geodesichange_geodesicFPOP_interface", (DL_FUNC) &_geodesichange_geodesicFPOP_interface, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_geodesichange(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
